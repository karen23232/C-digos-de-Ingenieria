from datetime import datetime, timedelta
from vencimiento import DocumentoVehiculo, Vehiculo

def test_documento_vigente():
    print("‚ñ∂ Ejecutando prueba: Documento vigente...")
    vehiculo = Vehiculo("ABC123")
    futuro = (datetime.now() + timedelta(days=30)).strftime("%Y-%m-%d")
    doc = DocumentoVehiculo("SOAT", futuro)
    vehiculo.agregar_documento(doc)

    assert len(vehiculo.documentos_vencidos()) == 0, "‚ùå El documento no deber√≠a estar vencido"
    assert len(vehiculo.documentos_vigentes()) == 1, "‚ùå Deber√≠a haber un documento vigente"
    print("‚úÖ Prueba 'documento vigente' pasada.\n")


def test_documento_vencido():
    print("‚ñ∂ Ejecutando prueba: Documento vencido...")
    vehiculo = Vehiculo("XYZ789")
    pasado = (datetime.now() - timedelta(days=10)).strftime("%Y-%m-%d")
    doc = DocumentoVehiculo("Revisi√≥n T√©cnico Mec√°nica", pasado)
    vehiculo.agregar_documento(doc)

    assert len(vehiculo.documentos_vencidos()) == 1, "‚ùå Deber√≠a haber un documento vencido"
    assert len(vehiculo.documentos_vigentes()) == 0, "‚ùå No deber√≠a haber documentos vigentes"
    print("‚úÖ Prueba 'documento vencido' pasada.\n")


def test_actualizacion_documento():
    print("‚ñ∂ Ejecutando prueba: Actualizaci√≥n de documento vencido...")
    vehiculo = Vehiculo("LMN456")
    pasado = (datetime.now() - timedelta(days=5)).strftime("%Y-%m-%d")
    doc = DocumentoVehiculo("Licencia", pasado)
    vehiculo.agregar_documento(doc)

    assert doc.esta_vencido(), "‚ùå El documento deber√≠a estar vencido inicialmente"

    # Simulamos actualizaci√≥n
    doc.fecha_vencimiento = datetime.now() + timedelta(days=10)

    assert not doc.esta_vencido(), "‚ùå El documento ya no deber√≠a estar vencido"
    print("‚úÖ Prueba 'actualizaci√≥n de documento' pasada.\n")


# Ejecuci√≥n manual de las pruebas
if __name__ == "__main__":
    try:
        test_documento_vigente()
        test_documento_vencido()
        test_actualizacion_documento()
        print("üéâ TODAS LAS PRUEBAS DE INTEGRACI√ìN PASARON CORRECTAMENTE ‚úÖ")
    except AssertionError as error:
        print(str(error))
        print("‚ùå Alguna prueba fall√≥.")
